program:
	declaration_list procedure_definition
;

declaration_list:
	procedure_declaration
|
	variable_declaration_list procedure_declaration
|
	procedure_declaration variable_declaration_list
;

procedure_declaration:
	VOID NAME '(' ')' ';'
;

procedure_definition:
	NAME '(' ')'
	'{' optional_variable_declaration_list statement_list '}'
;

optional_variable_declaration_list:
	/* empty */
|
	variable_declaration_list
;

variable_declaration_list:
	variable_declaration
|
	variable_declaration_list variable_declaration
;

variable_declaration:
	declaration ';'
;

declaration:
	INTEGER name_list
|
	FLOAT name_list
;

name_list:
	NAME
|
	name_list ',' NAME
;

statement_list:
	/*empty*/
|
	statement_list statement
;

statement:
	if_else_statement
|
	other_statement
;

other_statement:
	assignment_statement
|
	while_statement
|
	do_while_statement
|
	';'
;

assignment_statement:
	variable ASSIGN arith_expression ';'
;

if_else_statement:
	matched_statement
|
	unmatched_statement
;

matched_statement:
	IF '(' bool_expression ')'
	matched_statement_block
	ELSE
	matched_statement_block
;

unmatched_statement:
	IF '(' bool_expression ')'
	statement_block
|
	IF '(' bool_expression ')'
	matched_statement_block
	ELSE
	unmatched_statement
;

matched_statement_block:
	other_statement
|
	matched_statement
|
	'{' statement_list '}'
;

statement_block:
	statement
|
	'{' statement_list '}'
;

while_statement:
	WHILE '(' bool_expression ')'
	statement_block
;

do_while_statement:
	DO statement_block WHILE '(' bool_expression ')' ';'
;

arith_expression:
	operand '+' operand
|
	operand '-' operand
|
	operand '*' operand
|
	operand '/' operand
|
	'-' operand %prec UMINUS
|
	'(' operand ')'
|
	expression_term
;

conditional_expression:
	bool_expression '?' arith_expression ':' arith_expression ';'
;

bool_expression:
	NOT bool_expression
|
	operand LT operand
|
	operand LE operand
|
	operand GT operand
|
	operand GE operand
|
	operand EQ operand
|
	operand NE operand
|
	bool_expresion AND bool_expresion
|
	bool_expresion OR bool_expresion
|
	'(' bool_expresion ')'
;

operand:
	arith_expression
;

expression_term:
	variable
|
	constant
;

variable:
	NAME
;

constant:
	INTEGER_NUMBER
|
	DOUBLE_NUMBER
;
